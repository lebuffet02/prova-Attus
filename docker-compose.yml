version: '3.8'

networks:
  prova-usuarios:

volumes:
  prova-usuarios-keycloak-data:
  prova-usuarios-keycloak_logs:
  prova-usuarios-sonarqube_conf:
  prova-usuarios-sonarqube_data:
  prova-usuarios-sonarqube_extensions:
  prova-usuarios-sonarqube_logs:
  prova-usuarios-sonarqube_temp:
  prova-usuarios-sonar_db:
  prova-usuarios-sonar_db_data:


services:

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:24.0.2
    restart: always
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    ports:
      - 8080:8080
    command:
      - start-dev
    volumes:
      - prova-usuarios-keycloak-data:/opt/jboss/keycloak/standalone/data
      - prova-usuarios-keycloak_logs:/opt/jboss/keycloak/standalone/log


#  sonarqube:
#    image: sonarqube:lts-community
##    depends_on:
##      - sonar_db
#    environment:
#      SONAR_JDBC_URL: jdbc:postgresql://sonar_db:5432/sonar
#      SONAR_JDBC_USERNAME: sonar
#      SONAR_JDBC_PASSWORD: sonar
#    ports:
#      - 9000:9000
#    volumes:
#      - prova-usuarios-sonarqube_conf:/opt/sonarqube/conf
#      - prova-usuarios-sonarqube_data:/opt/sonarqube/data
#      - prova-usuarios-sonarqube_extensions:/opt/sonarqube/extensions
#      - prova-usuarios-sonarqube_logs:/opt/sonarqube/logs
#      - prova-usuarios-sonarqube_temp:/opt/sonarqube/temp

#  app:
#    container_name: app_usuarios
#    image: constrsw-2024-1/oauth
#    build:
#      context: .
#      dockerfile: Dockerfile
#      args:
#        JAR_FILE: ./target
#    environment:
#      - ?
#    ports:
#      - 8081:8081
#    networks:
#      - prova-usuarios
#    depends_on:
#      - keycloak